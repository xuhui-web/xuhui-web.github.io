{"title":"06vue3+ElementPlus综合实现","uid":"7e9c877cd1e65a897a0339a3e374ff44","slug":"vue3.2后台管理系统/06vue3+ElementPlus综合实现","date":"2022-08-22T16:02:44.000Z","updated":"2022-08-23T02:11:41.396Z","comments":true,"path":"api/articles/vue3.2后台管理系统/06vue3+ElementPlus综合实现.json","keywords":null,"cover":"/img/photo-1474903914960-c3f6602ebb5a.jpg","content":"<h1 id=\"第六章：vue3-ElementPlus综合实现\"><a href=\"#第六章：vue3-ElementPlus综合实现\" class=\"headerlink\" title=\"第六章：vue3+ElementPlus综合实现\"></a>第六章：vue3+ElementPlus综合实现</h1><h2 id=\"6-1：开篇\"><a href=\"#6-1：开篇\" class=\"headerlink\" title=\"6-1：开篇\"></a>6-1：开篇</h2><p>那么经过前面的学习，我们已经完成了：</p>\n<ol>\n<li>编程规范</li>\n<li>登录</li>\n<li><code>layout</code></li>\n<li>通用功能</li>\n</ol>\n<p>这四个大的模块开发，那么接下来我们就可以进入到项目的业务模块开发之中，结合具体的业务来去分析方案，也是一个非常重要的能力。</p>\n<p>那么这一章节，我们要去制作的就是 <strong>个人中心</strong> 模块。</p>\n<p>个人中心模块是一个集合了 <code>vue</code> + <code>element-plus</code> 的业务模块，主要分成三个大块：</p>\n<ol>\n<li><code>element-plus</code> 组件</li>\n<li>自定义业务组件</li>\n<li>业务中的国际化处理</li>\n</ol>\n<p>那么明确好了本章的主要内容之后，接下来我们就进入本章节的业务功能开发吧。</p>\n<h2 id=\"6-2：个人中心模块基本布局\"><a href=\"#6-2：个人中心模块基本布局\" class=\"headerlink\" title=\"6-2：个人中心模块基本布局\"></a>6-2：个人中心模块基本布局</h2><p>整个 <strong>个人中心</strong> 被分为左右两大块：</p>\n<ol>\n<li>项目介绍</li>\n<li><code>tabs</code><ol>\n<li>功能</li>\n<li>章节</li>\n<li>作者</li>\n</ol>\n</li>\n</ol>\n<p>根据功能划分，整个项目应该包含 4 个组件，分别对应着 4 个功能。</p>\n<p>所以，我们想要完成 <strong>个人中心模块基本布局</strong> 那么就需要先创建出这四个组件</p>\n<ol>\n<li><p>在 <code>views/profile/components</code> 下创建 <strong>项目介绍</strong> 组件 <code>ProjectCard</code></p>\n</li>\n<li><p>在 <code>views/profile/components</code> 下创建 <strong>功能</strong> 组件 <code>feature</code></p>\n</li>\n<li><p>在 <code>views/profile/components</code> 下创建 <strong>章节</strong> 组件 <code>chapter</code></p>\n</li>\n<li><p>在 <code>views/profile/components</code> 下创建 <strong>作者</strong> 组件 <code>author</code></p>\n</li>\n<li><p>进入到 <code>views/profile/index</code> 页面，绘制基本布局结构</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;my-container&quot;&gt;\n    &lt;el-row&gt;\n      &lt;el-col :span&#x3D;&quot;6&quot;&gt;\n        &lt;project-card class&#x3D;&quot;user-card&quot;&gt;&lt;&#x2F;project-card&gt;\n      &lt;&#x2F;el-col&gt;\n      &lt;el-col :span&#x3D;&quot;18&quot;&gt;\n        &lt;el-card&gt;\n          &lt;el-tabs v-model&#x3D;&quot;activeName&quot;&gt;\n            &lt;el-tab-pane :label&#x3D;&quot;$t(&#39;msg.profile.feature&#39;)&quot; name&#x3D;&quot;feature&quot;&gt;\n              &lt;feature &#x2F;&gt;\n            &lt;&#x2F;el-tab-pane&gt;\n            &lt;el-tab-pane :label&#x3D;&quot;$t(&#39;msg.profile.chapter&#39;)&quot; name&#x3D;&quot;chapter&quot;&gt;\n              &lt;chapter &#x2F;&gt;\n            &lt;&#x2F;el-tab-pane&gt;\n            &lt;el-tab-pane :label&#x3D;&quot;$t(&#39;msg.profile.author&#39;)&quot; name&#x3D;&quot;author&quot;&gt;\n              &lt;author &#x2F;&gt;\n            &lt;&#x2F;el-tab-pane&gt;\n          &lt;&#x2F;el-tabs&gt;\n        &lt;&#x2F;el-card&gt;\n      &lt;&#x2F;el-col&gt;\n    &lt;&#x2F;el-row&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nimport ProjectCard from &#39;.&#x2F;components&#x2F;ProjectCard.vue&#39;\nimport Chapter from &#39;.&#x2F;components&#x2F;Chapter.vue&#39;\nimport Feature from &#39;.&#x2F;components&#x2F;Feature.vue&#39;\nimport Author from &#39;.&#x2F;components&#x2F;Author.vue&#39;\nimport &#123; ref &#125; from &#39;vue&#39;\nconst activeName &#x3D; ref(&#39;feature&#39;)\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\n.my-container &#123;\n  .user-card &#123;\n    margin-right: 20px;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre></li>\n</ol>\n<h2 id=\"6-3：创建-PanThumb-头像组件\"><a href=\"#6-3：创建-PanThumb-头像组件\" class=\"headerlink\" title=\"6-3：创建 PanThumb 头像组件\"></a>6-3：创建 PanThumb 头像组件</h2><p>对于四个功能模块而言，我们首先处理 <strong>项目介绍</strong> 模块。</p>\n<p>在 <strong>项目介绍</strong> 模块中，存在一个头像：<strong>鼠标移入之后，头像会移开，显示出后面的文本</strong></p>\n<p>那么本小节我们要来开发的就是这个组件 <code>PanThumb </code>，整个组件核心的移动处理我们可以直接通过 <code>css</code> 进行实现</p>\n<ol>\n<li><p>创建 <code>components/PanThumb/index</code></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div\n    :style&#x3D;&quot;&#123; zIndex: zIndex, height: height, width: width &#125;&quot;\n    class&#x3D;&quot;pan-item&quot;\n  &gt;\n    &lt;div class&#x3D;&quot;pan-info&quot;&gt;\n      &lt;div class&#x3D;&quot;pan-info-roles-container&quot;&gt;\n        &lt;slot &#x2F;&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div :style&#x3D;&quot;&#123; backgroundImage: &#96;url($&#123;image&#125;)&#96; &#125;&quot; class&#x3D;&quot;pan-thumb&quot;&gt;&lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nimport &#123; defineProps &#125; from &#39;vue&#39;\ndefineProps(&#123;\n  image: &#123;\n    type: String\n  &#125;,\n  zIndex: &#123;\n    type: Number,\n    default: 1\n  &#125;,\n  width: &#123;\n    type: String,\n    default: &#39;150px&#39;\n  &#125;,\n  height: &#123;\n    type: String,\n    default: &#39;150px&#39;\n  &#125;\n&#125;)\n&lt;&#x2F;script&gt;\n\n&lt;style scoped&gt;\n.pan-item &#123;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n\n  .pan-info &#123;\n    position: absolute;\n    width: inherit;\n    height: inherit;\n    border-radius: 50%;\n    overflow: hidden;\n    box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\n\n    h3 &#123;\n      color: #fff;\n      text-transform: uppercase;\n      position: relative;\n      letter-spacing: 2px;\n      font-size: 14px;\n      margin: 0 60px;\n      padding: 22px 0 0 0;\n      height: 85px;\n      font-family: &#39;Open Sans&#39;, Arial, sans-serif;\n      text-shadow: 0 0 1px #fff, 0 1px 2px rgba(0, 0, 0, 0.3);\n    &#125;\n\n    p &#123;\n      color: #fff;\n      padding: 10px 5px;\n      font-style: italic;\n      margin: 0 30px;\n      font-size: 12px;\n      border-top: 1px solid rgba(255, 255, 255, 0.5);\n\n      a &#123;\n        display: block;\n        color: #333;\n        width: 80px;\n        height: 80px;\n        background: rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        color: #fff;\n        font-style: normal;\n        font-weight: 700;\n        text-transform: uppercase;\n        font-size: 9px;\n        letter-spacing: 1px;\n        padding-top: 24px;\n        margin: 7px auto 0;\n        font-family: &#39;Open Sans&#39;, Arial, sans-serif;\n        opacity: 0;\n        transition: transform 0.3s ease-in-out 0.2s,\n          opacity 0.3s ease-in-out 0.2s, background 0.2s linear 0s;\n        transform: translateX(60px) rotate(90deg);\n      &#125;\n\n      a:hover &#123;\n        background: rgba(255, 255, 255, 0.5);\n      &#125;\n    &#125;\n\n    .pan-info-roles-container &#123;\n      padding: 20px;\n      text-align: center;\n    &#125;\n  &#125;\n\n  .pan-thumb &#123;\n    width: 100%;\n    height: 100%;\n    background-position: center center;\n    background-size: cover;\n    border-radius: 50%;\n    overflow: hidden;\n    position: absolute;\n    transform-origin: 95% 40%;\n    transition: all 0.3s ease-in-out;\n  &#125;\n\n  .pan-item:hover .pan-thumb &#123;\n    transform: rotate(-110deg);\n  &#125;\n\n  .pan-item:hover .pan-info p a &#123;\n    opacity: 1;\n    transform: translateX(0px) rotate(0deg);\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n</li>\n<li><p>在 <code>projectCard</code> 中导入测试</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;&quot;&gt;\n    &lt;pan-thumb\n      :image&#x3D;&quot;$store.getters.userInfo.avatar&quot;\n      :height&#x3D;&quot;&#39;100px&#39;&quot;\n      :width&#x3D;&quot;&#39;100px&#39;&quot;\n      :hoverable&#x3D;&quot;false&quot;\n    &gt;\n      &lt;div&gt;Hello&lt;&#x2F;div&gt;\n      &#123;&#123; $store.getters.userInfo.title &#125;&#125;\n    &lt;&#x2F;pan-thumb&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre></li>\n</ol>\n<h2 id=\"6-4：element-plus：项目介绍模块开发\"><a href=\"#6-4：element-plus：项目介绍模块开发\" class=\"headerlink\" title=\"6-4：element-plus：项目介绍模块开发\"></a>6-4：element-plus：项目介绍模块开发</h2><p>项目介绍从上到下可以分为三部分：</p>\n<ol>\n<li>头像区域</li>\n<li>项目介绍</li>\n<li>项目功能</li>\n</ol>\n<p>对于这三块的数据而言，前面两个是直接在前端写死的，<strong>项目功能</strong> 是从服务端获取到的。</p>\n<p>对于前端写死部分，我们已经在之前定义到了 <code>i18n/lang</code> 之下</p>\n<p>而对于从服务端获取部分，我们就需要单独定义上接口了：</p>\n<ol>\n<li><p>创建 <code>api/user</code> 模块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import request from &#39;@&#x2F;utils&#x2F;request&#39;\n\nexport const feature &#x3D; () &#x3D;&gt; &#123;\n  return request(&#123;\n    url: &#39;&#x2F;user&#x2F;feature&#39;\n  &#125;)\n&#125;\n</code></pre>\n</li>\n<li><p>因为该数据会同时在 <code>ProjectCard</code> 和 <code>Feature</code> 组件中使用，所以我们可以在 <code>profile</code> 中调用该接口获取数据，然后再把数据分别传入到两个子级组件中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; feature &#125; from &#39;@&#x2F;api&#x2F;user&#39;\n\nconst featureData &#x3D; ref([])\nconst getFeatureData &#x3D; async () &#x3D;&gt; &#123;\n  featureData.value &#x3D; await feature()\n&#125;\ngetFeatureData()</code></pre>\n</li>\n<li><p>传递数据到 <code>ProjectCard</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;project-card class&#x3D;&quot;user-card&quot; :features&#x3D;&quot;featureData&quot;&gt;&lt;&#x2F;project-card&gt;</code></pre></li>\n</ol>\n<p>有了数据之后，接下来我们就可以去完成 <strong>项目介绍</strong> 模块：</p>\n<ol>\n<li><p>先处理头像区域</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;el-card class&#x3D;&quot;user-container&quot;&gt;\n    &lt;template #header&gt;\n      &lt;div class&#x3D;&quot;header&quot;&gt;\n        &lt;span&gt;&#123;&#123; $t(&#39;msg.profile.introduce&#39;) &#125;&#125;&lt;&#x2F;span&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;template&gt;\n\n    &lt;div class&#x3D;&quot;user-profile&quot;&gt;\n      &lt;!-- 头像 --&gt;\n      &lt;div class&#x3D;&quot;box-center&quot;&gt;\n        &lt;pan-thumb\n          :image&#x3D;&quot;$store.getters.userInfo.avatar&quot;\n          :height&#x3D;&quot;&#39;100px&#39;&quot;\n          :width&#x3D;&quot;&#39;100px&#39;&quot;\n          :hoverable&#x3D;&quot;false&quot;\n        &gt;\n          &lt;div&gt;Hello&lt;&#x2F;div&gt;\n          &#123;&#123; $store.getters.userInfo.title &#125;&#125;\n        &lt;&#x2F;pan-thumb&gt;\n      &lt;&#x2F;div&gt;\n      &lt;!-- 姓名 &amp;&amp; 角色 --&gt;\n      &lt;div class&#x3D;&quot;box-center&quot;&gt;\n        &lt;div class&#x3D;&quot;user-name text-center&quot;&gt;\n          &#123;&#123; $store.getters.userInfo.username &#125;&#125;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;user-role text-center text-muted&quot;&gt;\n          &#123;&#123; $store.getters.userInfo.title &#125;&#125;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;el-card&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nimport PanThumb from &#39;@&#x2F;components&#x2F;PanThumb&#x2F;index.vue&#39;\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\n.user-container &#123;\n  .text-muted &#123;\n    font-size: 14px;\n    color: #777;\n  &#125;\n\n  .user-profile &#123;\n    text-align: center;\n    .user-name &#123;\n      font-weight: bold;\n    &#125;\n\n    .box-center &#123;\n      padding-top: 10px;\n    &#125;\n\n    .user-role &#123;\n      padding-top: 10px;\n      font-weight: 400;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n</li>\n<li><p>接下来是项目介绍区域</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;el-card class&#x3D;&quot;user-container&quot;&gt;\n    ...\n    &lt;!-- 简介 --&gt;\n    &lt;div class&#x3D;&quot;project-bio&quot;&gt;\n      &lt;div class&#x3D;&quot;project-bio-section&quot;&gt;\n        &lt;div class&#x3D;&quot;project-bio-section-header&quot;&gt;\n          &lt;svg-icon icon&#x3D;&quot;introduce&quot; &#x2F;&gt;\n          &lt;span&gt;&#123;&#123; $t(&#39;msg.profile.projectIntroduction&#39;) &#125;&#125;&lt;&#x2F;span&gt;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;project-bio-section-body&quot;&gt;\n          &lt;div class&#x3D;&quot;text-muted&quot;&gt;\n            &#123;&#123; $t(&#39;msg.profile.muted&#39;) &#125;&#125;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;el-card&gt;\n&lt;&#x2F;template&gt;\n\n....\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\n.user-container &#123;\n  ...\n  .project-bio &#123;\n    margin-top: 20px;\n    color: #606266;\n    span &#123;\n      padding-left: 4px;\n    &#125;\n\n    .project-bio-section &#123;\n      margin-bottom: 36px;\n      .project-bio-section-header &#123;\n        border-bottom: 1px solid #dfe6ec;\n        padding-bottom: 10px;\n        margin-bottom: 10px;\n        font-weight: bold;\n      &#125;\n      .project-bio-section-body &#123;\n        .progress-item &#123;\n          margin-top: 10px;\n          div &#123;\n            font-size: 14px;\n            margin-bottom: 2px;\n          &#125;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n</li>\n<li><p>最后是项目功能区域，先接收项目功能数据</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script setup&gt;\nimport &#123; defineProps &#125; from &#39;vue&#39;\ndefineProps(&#123;\n  features: &#123;\n    type: Array,\n    required: true\n  &#125;\n&#125;)\n&lt;&#x2F;script&gt;</code></pre>\n</li>\n<li><p>处理对应视图</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;div class&#x3D;&quot;project-bio-section&quot;&gt;\n        &lt;div class&#x3D;&quot;project-bio-section-header&quot;&gt;\n          &lt;svg-icon icon&#x3D;&quot;reward&quot; &#x2F;&gt;&lt;span&gt;&#123;&#123;\n            $t(&#39;msg.profile.projectFunction&#39;)\n          &#125;&#125;&lt;&#x2F;span&gt;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;project-bio-section-body&quot;&gt;\n          &lt;div class&#x3D;&quot;progress-item&quot; v-for&#x3D;&quot;item in features&quot; :key&#x3D;&quot;item.id&quot;&gt;\n            &lt;div&gt;&#123;&#123; item.title &#125;&#125;&lt;&#x2F;div&gt;\n            &lt;el-progress :percentage&#x3D;&quot;item.percentage&quot; status&#x3D;&quot;success&quot; &#x2F;&gt;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;div&gt;</code></pre></li>\n</ol>\n<h2 id=\"6-5：接口国际化：处理接口国际化问题\"><a href=\"#6-5：接口国际化：处理接口国际化问题\" class=\"headerlink\" title=\"6-5：接口国际化：处理接口国际化问题\"></a>6-5：接口国际化：处理接口国际化问题</h2><p>在现在我们去切换语言，发现在 <strong>项目功能</strong> 部分，数据并没有进行国际化展示，所以接下来我们需要处理的就是这部分数据的国际化内容</p>\n<p>在前面我们知道整个 <strong>项目介绍</strong> 中，数据存在两种：</p>\n<ol>\n<li>本地写死的国际化数据</li>\n<li>接口获取到的数据</li>\n</ol>\n<p>那么针对于第一种数据是可以直接完成国际化展示的。</p>\n<p>但是第二种数据因为是从服务端获取到的，所以说，服务端返回什么内容，那么前端就会展示什么内容。</p>\n<p>所以说如果我们想要完成接口的国际化，那么就需要让服务端返回对应国际化的数据。</p>\n<p>如果想要达到这个目的，那么我们需要：<strong>在接口请求的 <code>headers</code> 中增加 <code>Accept-Language</code> 表明当前我们所需要的语言类型</strong>，在 <strong>支持国际化</strong> 的接口服务中，可以直接获取到国际化数据</p>\n<ol>\n<li><p>在 <code>utils/request.js</code> 的请求拦截器中增加 <code>headers</code> 配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 请求拦截器\nservice.interceptors.request.use(\n  config &#x3D;&gt; &#123;\n    &#x2F;&#x2F; 在这个位置需要统一的去注入token\n    if (store.getters.token) &#123;\n     ...\n    &#125;\n    &#x2F;&#x2F; 配置接口国际化\n    config.headers[&#39;Accept-Language&#39;] &#x3D; store.getters.language\n    return config &#x2F;&#x2F; 必须返回配置\n  &#125;,\n  error &#x3D;&gt; &#123;\n    return Promise.reject(error)\n  &#125;\n)</code></pre></li>\n</ol>\n<p>其实我们发现，在我们切换了语言之后，<strong>刷新</strong> 页面即可获取到 <strong>国际化返回数据</strong></p>\n<p>但是每次都刷新页面的操作未免不太友好，那么有没有什么办法可以跳过刷新这个步骤呢？</p>\n<p>还记不记得，我们之前定义过的 <code>watchSwitchLang</code> 方法，该方法可以 <strong>监听到语言的变化，然后指定操作</strong>。依赖这个方法得出以下代码：</p>\n<ol>\n<li><p>在 <code>views/profile/index</code> 中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; watchSwitchLang &#125; from &#39;@&#x2F;utils&#x2F;i18n&#39;\n&#x2F;&#x2F; 监听语言切换\nwatchSwitchLang(getFeatureData)</code></pre></li>\n</ol>\n<p>那么现在 <strong>项目介绍</strong> 的数据已经可以实现国际化了</p>\n<p>剩下的就是 <strong>用户信息</strong> 数据的国际化实现，在 <code>app.js</code> 中监听语言变化，重新制定获取用户信息的动作</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; watchSwitchLang &#125; from &#39;@&#x2F;utils&#x2F;i18n&#39;\n\n&#x2F;**\n * 监听 语言变化，重新获取个人信息\n *&#x2F;\nwatchSwitchLang(() &#x3D;&gt; &#123;\n  if (store.getters.token) &#123;\n    store.dispatch(&#39;user&#x2F;getUserInfo&#39;)\n  &#125;\n&#125;)</code></pre>\n\n\n\n\n\n<h2 id=\"6-6：element-plus：功能模块开发\"><a href=\"#6-6：element-plus：功能模块开发\" class=\"headerlink\" title=\"6-6：element-plus：功能模块开发\"></a>6-6：element-plus：功能模块开发</h2><p>处理完成接口的国际化之后，接下来我们来看功能模块开发</p>\n<p>功能模块中我们会使用到 <code>element-plus</code> 的 <a href=\"https://element-plus.org/zh-CN/component/collapse.html\">el-collapse</a> 组件</p>\n<ol>\n<li><p>在 <code>profile</code> 中传递数据到 <code>Feature</code></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;feature :features&#x3D;&quot;featureData&quot; &#x2F;&gt;\n\n&lt;script setup&gt;\nimport &#123; defineProps &#125; from &#39;vue&#39;\ndefineProps(&#123;\n  features: &#123;\n    type: Array,\n    required: true\n  &#125;\n&#125;)\n&lt;&#x2F;script&gt;</code></pre>\n</li>\n<li><p>利用 <a href=\"https://element-plus.org/zh-CN/component/collapse.html\">el-collapse</a> 渲染结构</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;el-collapse v-model&#x3D;&quot;activeName&quot; accordion&gt;\n    &lt;el-collapse-item\n      v-for&#x3D;&quot;item in features&quot;\n      :key&#x3D;&quot;item.id&quot;\n      :title&#x3D;&quot;item.title&quot;\n      :name&#x3D;&quot;item.id&quot;\n    &gt;\n      &lt;div v-html&#x3D;&quot;item.content&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;&#x2F;el-collapse-item&gt;\n  &lt;&#x2F;el-collapse&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nimport &#123; ref, defineProps &#125; from &#39;vue&#39;\nconst activeName &#x3D; ref(0)\ndefineProps(&#123;\n  features: &#123;\n    type: Array,\n    required: true\n  &#125;\n&#125;)\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\n::v-deep .el-collapse-item__header &#123;\n  font-weight: bold;\n&#125;\n\n.el-collapse-item &#123;\n  ::v-deep a &#123;\n    color: #2d62f7;\n    margin: 0 4px;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre></li>\n</ol>\n<h2 id=\"6-7：element-plus：章节模块开发\"><a href=\"#6-7：element-plus：章节模块开发\" class=\"headerlink\" title=\"6-7：element-plus：章节模块开发\"></a>6-7：element-plus：章节模块开发</h2><p>对于章节模块的处理，我们只需要在获取到数据之后，利用 <a href=\"https://element-plus.org/zh-CN/component/timeline.html\">Timeline</a> 进行渲染即可。</p>\n<ol>\n<li><p>在 <code>api/user</code> 下定义接口</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const chapter &#x3D; () &#x3D;&gt; &#123;\n  return request(&#123;\n    url: &#39;&#x2F;user&#x2F;chapter&#39;\n  &#125;)\n&#125;</code></pre>\n</li>\n<li><p>在 <code>Chapter</code> 调用接口，处理接口国际化</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;script setup&gt;\nimport &#123; watchSwitchLang &#125; from &#39;@&#x2F;utils&#x2F;i18n&#39;\nimport &#123; chapter &#125; from &#39;@&#x2F;api&#x2F;user&#39;\nimport &#123; ref &#125; from &#39;vue&#39;\nconst chapterData &#x3D; ref([])\n\nconst getChapterData &#x3D; async () &#x3D;&gt; &#123;\n  chapterData.value &#x3D; await chapter()\n&#125;\ngetChapterData()\n\n&#x2F;&#x2F; 监听语言切换\nwatchSwitchLang(getChapterData)\n&lt;&#x2F;script&gt;</code></pre>\n</li>\n<li><p>根据数据，利用  <a href=\"https://element-plus.org/zh-CN/component/timeline.html\">Timeline</a> 进行渲染</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;el-timeline&gt;\n    &lt;el-timeline-item\n      v-for&#x3D;&quot;item in chapterData&quot;\n      :key&#x3D;&quot;item.id&quot;\n      :timestamp&#x3D;&quot;item.timestamp&quot;\n      placement&#x3D;&quot;top&quot;\n    &gt;\n      &lt;el-card&gt;\n        &lt;h4&gt;&#123;&#123; item.content &#125;&#125;&lt;&#x2F;h4&gt;\n      &lt;&#x2F;el-card&gt;\n    &lt;&#x2F;el-timeline-item&gt;\n  &lt;&#x2F;el-timeline&gt;\n&lt;&#x2F;template&gt;</code></pre></li>\n</ol>\n<h2 id=\"6-8：element-plus：作者模块开发\"><a href=\"#6-8：element-plus：作者模块开发\" class=\"headerlink\" title=\"6-8：element-plus：作者模块开发\"></a>6-8：element-plus：作者模块开发</h2><p>作者模块整体比较简单，我们直接使用本地数据进行渲染即可</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;author-container&quot;&gt;\n    &lt;div class&#x3D;&quot;header&quot;&gt;\n      &lt;pan-thumb\n        image&#x3D;&quot;https:&#x2F;&#x2F;img4.sycdn.imooc.com&#x2F;61110c2b0001152907400741-140-140.jpg&quot;\n        height&#x3D;&quot;60px&quot;\n        width&#x3D;&quot;60px&quot;\n        :hoverable&#x3D;&quot;false&quot;\n      &gt;\n        &#123;&#123; $t(&#39;msg.profile.name&#39;) &#125;&#125;\n      &lt;&#x2F;pan-thumb&gt;\n      &lt;div class&#x3D;&quot;header-desc&quot;&gt;\n        &lt;h3&gt;&#123;&#123; $t(&#39;msg.profile.name&#39;) &#125;&#125;&lt;&#x2F;h3&gt;\n        &lt;span&gt;&#123;&#123; $t(&#39;msg.profile.job&#39;) &#125;&#125;&lt;&#x2F;span&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div class&#x3D;&quot;info&quot;&gt;\n      &#123;&#123; $t(&#39;msg.profile.Introduction&#39;) &#125;&#125;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script setup&gt;\nimport PanThumb from &#39;@&#x2F;components&#x2F;PanThumb&#x2F;index.vue&#39;\nimport &#123;&#125; from &#39;vue&#39;\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\n.author-container &#123;\n  .header &#123;\n    display: flex;\n    .header-desc &#123;\n      margin-left: 12px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n\n      span &#123;\n        font-size: 14px;\n      &#125;\n    &#125;\n  &#125;\n  .info &#123;\n    margin-top: 16px;\n    line-height: 22px;\n    font-size: 14px;\n    text-indent: 26px;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n\n\n\n<h2 id=\"6-9：总结\"><a href=\"#6-9：总结\" class=\"headerlink\" title=\"6-9：总结\"></a>6-9：总结</h2><p>本章节中的内容主要就是分成了</p>\n<ol>\n<li><code>element-plus</code> 组件</li>\n<li>自定义业务组件</li>\n<li>业务中的国际化处理</li>\n</ol>\n<p>这三个模块，整体来说复杂度比前面的章节要小不少，算是一个过渡章节。</p>\n<p>那么从下一章节开发，我们就要进入到 <strong>用户模块</strong> 的业务开发了，整个  <strong>用户模块</strong> 包含了</p>\n<ol>\n<li>员工管理</li>\n<li>角色列表</li>\n<li>权限列表</li>\n</ol>\n<p>三个大的部分</p>\n<p>并且我们会在这三个模块的业务权限纠缠中处理更多的功能解决方案，想要了解更多？那么快来看下一个章节的内容吧！</p>\n","text":"第六章：vue3+ElementPlus综合实现6-1：开篇那么经过前面的学习，我们已经完成了： 编程规范 登录 layout 通用功能 这四个大的模块开发，那么接下来我们就可以进入到项目的业务模块开发之中，结合具体的业务来去分析方案，也是一个非常重要的能力。 那么这一章节，我们...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9Avue3-ElementPlus%E7%BB%BC%E5%90%88%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">第六章：vue3+ElementPlus综合实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-1%EF%BC%9A%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">6-1：开篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-2%EF%BC%9A%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E6%A8%A1%E5%9D%97%E5%9F%BA%E6%9C%AC%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">6-2：个人中心模块基本布局</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-3%EF%BC%9A%E5%88%9B%E5%BB%BA-PanThumb-%E5%A4%B4%E5%83%8F%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">6-3：创建 PanThumb 头像组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-4%EF%BC%9Aelement-plus%EF%BC%9A%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">6-4：element-plus：项目介绍模块开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-5%EF%BC%9A%E6%8E%A5%E5%8F%A3%E5%9B%BD%E9%99%85%E5%8C%96%EF%BC%9A%E5%A4%84%E7%90%86%E6%8E%A5%E5%8F%A3%E5%9B%BD%E9%99%85%E5%8C%96%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">6-5：接口国际化：处理接口国际化问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-6%EF%BC%9Aelement-plus%EF%BC%9A%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">6-6：element-plus：功能模块开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-7%EF%BC%9Aelement-plus%EF%BC%9A%E7%AB%A0%E8%8A%82%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">6-7：element-plus：章节模块开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-8%EF%BC%9Aelement-plus%EF%BC%9A%E4%BD%9C%E8%80%85%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">6-8：element-plus：作者模块开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-9%EF%BC%9A%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">6-9：总结</span></a></li></ol></li></ol>","author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}},"mapped":true,"prev_post":{"title":"07用户权限处理","uid":"569348560a15d3e35abb58031a3aedf4","slug":"vue3.2后台管理系统/07用户权限处理","date":"2022-08-22T17:02:44.000Z","updated":"2022-08-23T02:02:47.063Z","comments":true,"path":"api/articles/vue3.2后台管理系统/07用户权限处理.json","keywords":null,"cover":"/img/photo-1511287381215-8c58b84f8896.jpg","text":"第七章：用户权限处理7-01：开篇在处理完成了 个人中心之后， 那么接下来我们就需要来处理 用户 相关的模块了 整个用户相关的模块分为三部分： 员工管理 角色列表 权限列表 这三部分的内容我们会分成两个大章来进行处理。 那么这一大章我们要来处理的就是 员工管理 模块的内容，整个 ...","link":"","photos":[],"count_time":{"symbolsCount":"37k","symbolsTime":"33 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}}},"next_post":{"title":"05通用功能开发","uid":"5c163a9965f56c02ab2c674f0a7895b4","slug":"vue3.2后台管理系统/05通用功能开发","date":"2022-08-22T15:02:44.000Z","updated":"2022-08-23T02:17:01.019Z","comments":true,"path":"api/articles/vue3.2后台管理系统/05通用功能开发.json","keywords":null,"cover":"/img/photo-1471238119891-2e56eca253b4.jpg","text":"第五章：通用功能开发5-01：开篇在后台项目的前端开发之中，存在着很多的通用业务功能，并且存在着一定的技术难度。 所以说就有很多人在面临这些功能的时候，大多数时都是采用 ctrl + c || v 的形式来进行实现。这就导致了虽然做过类似的功能，但是对这些功能的实现原理一知半解。...","link":"","photos":[],"count_time":{"symbolsCount":"62k","symbolsTime":"57 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}}}}