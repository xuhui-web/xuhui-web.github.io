{"title":"11项目部署之通用方案","uid":"ceaf92ec45e058e81b36404611c06d3e","slug":"vue3.2后台管理系统/11项目部署之通用方案","date":"2022-08-22T21:02:44.000Z","updated":"2022-08-23T02:05:49.385Z","comments":true,"path":"api/articles/vue3.2后台管理系统/11项目部署之通用方案.json","keywords":null,"cover":"/img/SplitShire-21-7162-1024x683.jpg","content":"<h1 id=\"第十一章：项目部署之通用方案\"><a href=\"#第十一章：项目部署之通用方案\" class=\"headerlink\" title=\"第十一章：项目部署之通用方案\"></a>第十一章：项目部署之通用方案</h1><h2 id=\"11-1：开篇\"><a href=\"#11-1：开篇\" class=\"headerlink\" title=\"11-1：开篇\"></a>11-1：开篇</h2><p>那么到这里我们的整个课程就已经接近尾声了。</p>\n<p>最后我们就需要来看一下项目的打包和发布功能，这两个功能也就是我们本章节的主要功能。</p>\n<h2 id=\"11-2：项目构建过程分析与实现\"><a href=\"#11-2：项目构建过程分析与实现\" class=\"headerlink\" title=\"11-2：项目构建过程分析与实现\"></a>11-2：项目构建过程分析与实现</h2><p>本小节我们主要围绕着三个问题来去讲：</p>\n<ol>\n<li>为什么需要打包项目？</li>\n<li>打包之后项目可以通过浏览器直接访问吗？</li>\n<li>为什么需要有服务？</li>\n</ol>\n<p><strong>为什么需要打包项目：</strong></p>\n<p>浏览器只能识别并运行 <strong><code>html、css、js</code> 文件</strong> 。</p>\n<p>那么换句话而言，项目中的 <code>.vue</code> 文件，浏览器是不认识的。</p>\n<p>而打包的过程就是把 <code>.vue</code> 的 <strong>单文件组件</strong> 打包成 <code>html、css、js</code> 的文件，让浏览器进行识别，并展示我们的项目</p>\n<p><strong>打包之后项目可以通过浏览器直接访问吗？</strong></p>\n<p>我们可以测试一下。</p>\n<p>通过 <code>npm run build</code> 打包项目之后，打包的文件会被放入到 <code>dist</code> 文件夹中，其实我们可以直接双击 <code>index.html</code> 文件，可以发现，浏览器是 <strong>无法</strong> 显示项目的。</p>\n<p>打开 <code>F12</code> 可以发现，终端中抛出了很多的错误。</p>\n<p>那么根据这些错误可以知道，无法显示的原因是因为 <strong>一些文件找不到了</strong>。</p>\n<p>那么为什么找不到呢？</p>\n<p>查看我们的 <code>url</code> 可以发现，其实我们的 <code>url</code> 是一个 <code>file</code> 协议。那么对应的文件路径就会编程 <code>盘符下的 xxx</code> ，在我们当前的盘符下没有对应的文件，那么自然是无法找到的。</p>\n<p>而想要解决这个问题的话，就需要把我们的项目运行到一个 <strong>服务</strong> 中，就像我们开发时的 <a href=\"https://webpack.docschina.org/configuration/dev-server/\">devServer</a> 一样。</p>\n<p><strong>为什么需要有服务？</strong></p>\n<p>明确了上面的问题之后，为什么要有服务就比较好理解了。</p>\n<p>我们需要通过一个 <strong>服务</strong> 托管我们的项目，从而避免出现模块无法被找到等问题。</p>\n<hr>\n<p>那么明确好了，以上问题之后，接下来我们就可以打包我们的项目，并且把项目部署到服务器之中。</p>\n<p>我们可以通过 <code>npm run build</code> 打包项目，打包好项目之后，接下来我们再来看如何到服务器中部署我们的服务。</p>\n<h2 id=\"11-3：域名、DNS、公网IP、服务器、Nginx之间的关系\"><a href=\"#11-3：域名、DNS、公网IP、服务器、Nginx之间的关系\" class=\"headerlink\" title=\"11-3：域名、DNS、公网IP、服务器、Nginx之间的关系\"></a>11-3：域名、DNS、公网IP、服务器、Nginx之间的关系</h2><p>在处理我们的服务之前，我们明确一些基本的概念，这些概念有：</p>\n<ol>\n<li>域名：<code>https://imooc-admin.lgdsunday.club</code></li>\n<li>DNS：域名解析服务器</li>\n<li>公网IP：服务器在网络中的唯一地址</li>\n<li>服务器：服务部署的电脑</li>\n<li>Nginx：网页服务</li>\n</ol>\n<img src=\"/post/vue3.2%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/11%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B9%8B%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88/image-20211011202658109.png\" class=\"\" title=\"image-20211011202658109\">\n\n\n\n<h2 id=\"11-4：阿里云服务器购买指南\"><a href=\"#11-4：阿里云服务器购买指南\" class=\"headerlink\" title=\"11-4：阿里云服务器购买指南\"></a>11-4：阿里云服务器购买指南</h2><p><a href=\"https://ecs-buy.aliyun.com/wizard/#/prepay/cn-beijing?fromDomain=true\">云服务器 ECS 自定义购买</a></p>\n<h2 id=\"11-5：服务器连接方式\"><a href=\"#11-5：服务器连接方式\" class=\"headerlink\" title=\"11-5：服务器连接方式\"></a>11-5：服务器连接方式</h2><p>常见的连接服务器的方式有三种：</p>\n<ol>\n<li>阿里云控制台中进行远程链接</li>\n<li><strong>通过 <code>SSH</code> 工具</strong>（<a href=\"https://www.netsarang.com/en/xshell/\">XShell</a>）</li>\n<li><code>SSH</code> 指令远程登录</li>\n</ol>\n<p>那么我们这里使用第二种 <strong>通过 <code>SSH</code> 工具</strong>（<a href=\"https://www.netsarang.com/en/xshell/\">XShell</a>）进行连接。</p>\n<ol>\n<li>新建会话<img src=\"11项目部署之通用方案/image-20211011203212635.png\" alt=\"image-20211011203212635\" style=\"zoom:50%;\" /></li>\n<li>确定会话信息，协议为 <code>SSH</code>、主机为服务器 IP、端口号为 22<img src=\"11项目部署之通用方案/image-20211011203403394.png\" alt=\"image-20211011203403394\" style=\"zoom:67%;\" /></li>\n<li>双击会话进行连接<img src=\"/post/vue3.2%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/11%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B9%8B%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88/image-20211011203436662.png\" class=\"\" title=\"image-20211011203436662\"></li>\n<li>输入你的用户名（默认为 <code>root</code>）<img src=\"/post/vue3.2%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/11%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B9%8B%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88/image-20211011203504688.png\" class=\"\" title=\"image-20211011203504688\"></li>\n<li>输入你的密码<img src=\"11项目部署之通用方案/image-20211011203533726.png\" alt=\"image-20211011203533726\" style=\"zoom:67%;\" /></li>\n<li>出现此信息，表示连接成功<img src=\"11项目部署之通用方案/image-20211011203631626.png\" alt=\"image-20211011203631626\" style=\"zoom:50%;\" /></li>\n</ol>\n<h2 id=\"11-6：Nginx-环境处理\"><a href=\"#11-6：Nginx-环境处理\" class=\"headerlink\" title=\"11-6：Nginx 环境处理\"></a>11-6：Nginx 环境处理</h2><ol>\n<li><p><code>nginx</code> 编译时依赖 <code>gcc</code> 环境</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install gcc gcc-c++</code></pre>\n</li>\n<li><p>安装 <code>prce</code>，让 <code>nginx</code> 支持重写功能</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install pcre*</code></pre>\n</li>\n<li><p>安装 <code>zlib</code>，<code>nginx</code> 使用 <code>zlib</code> 对 <code>http</code> 包内容进行 <code>gzip</code> 压缩</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install zlib zlib-devel </code></pre>\n</li>\n<li><p>安装 <code>openssl</code>，用于通讯加密</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install openssl openssl-devel</code></pre>\n</li>\n<li><p>进行 <code>nginx</code> 安装</p>\n</li>\n<li><p>创建 <code>nginx</code> 文件夹</p>\n</li>\n<li><p>下载 <code>nginx</code> 压缩包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.11.5.tar.gz</code></pre>\n</li>\n<li><p>解压 <code>nginx</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -zxvf  nginx-1.11.5.tar.gz</code></pre>\n</li>\n<li><p>进入 <code>nginx-1.11.5</code> 目录</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd nginx-1.11.5</code></pre>\n</li>\n<li><p>检查平台安装环境</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx</code></pre>\n</li>\n<li><p>进行源码编译</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make </code></pre>\n</li>\n<li><p>安装 <code>nginx</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make install</code></pre>\n</li>\n<li><p>查看 <code>nginx</code> 配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -t</code></pre>\n</li>\n<li><p>制作 <code>nginx</code> 软连接</p>\n</li>\n<li><p>进入 <code>usr/bin</code> 目录</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;bin</code></pre>\n</li>\n<li><p>制作软连接</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln -s &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx nginx</code></pre>\n</li>\n<li><p>接下来制作配置文件</p>\n</li>\n<li><p>首先进入到 <code>nginx</code> 的默认配置文件中</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</code></pre>\n</li>\n<li><p>在最底部增加配置项（按下 <code>i</code> 进入 输入模式）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">include &#x2F;nginx&#x2F;*.conf;</code></pre>\n</li>\n<li><p>按下 <code>esc</code> 键，通过 <code>:wq!</code> 保存并退出</p>\n</li>\n<li><p>创建新的配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">touch &#x2F;nginx&#x2F;nginx.conf</code></pre>\n</li>\n<li><p>进入到 <code>/root/nginx/nginx.conf</code> 文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim &#x2F;nginx&#x2F;nginx.conf</code></pre>\n</li>\n<li><p>写入如下配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"># imooc-admin\nserver &#123;\n    # 端口\n    listen       80;\n    # 域名\n    server_name  localhost;\n    # 资源地址\n    root   &#x2F;nginx&#x2F;dist&#x2F;;\n    # 目录浏览\n    autoindex on;\n    # 缓存处理\n    add_header Cache-Control &quot;no-cache, must-revalidate&quot;;\n    # 请求配置\n    location &#x2F; &#123;\n        # 跨域\n        add_header Access-Control-Allow-Origin *;\n        # 返回 index.html\n        try_files $uri $uri&#x2F; &#x2F;index.html;\n    &#125;\n&#125;</code></pre>\n</li>\n<li><p>通过 <code>:wq!</code> 保存退出</p>\n</li>\n<li><p>在 <code>root/nginx</code> 中创建 <code>dist</code> 文件夹</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir &#x2F;nginx&#x2F;dist</code></pre>\n</li>\n<li><p>在 <code>nginx/dist</code> 中写入 <code>index.html</code> 进行测试</p>\n</li>\n<li><p>通过 <code>nginx -s reload</code> 重启服务</p>\n</li>\n<li><p>在 浏览器中通过，<code>IP</code> 测试访问</p>\n</li>\n</ol>\n<h2 id=\"11-7：项目发布\"><a href=\"#11-7：项目发布\" class=\"headerlink\" title=\"11-7：项目发布\"></a>11-7：项目发布</h2><p>可以通过 <a href=\"https://www.netsarang.com/en/xftp/\">XFTP</a> 进行数据传输</p>\n<h2 id=\"11-8：总结\"><a href=\"#11-8：总结\" class=\"headerlink\" title=\"11-8：总结\"></a>11-8：总结</h2><p>本章节主要讲解了一些基础的 <strong>部署</strong> 相关的知识，这些内容并不复杂，属于通用性内容。</p>\n<p>那么现在我们的项目就已经可以部署到我们的服务器中了，大家就可以根据自己的域名进行对应的访问了</p>\n","feature":true,"text":"第十一章：项目部署之通用方案11-1：开篇那么到这里我们的整个课程就已经接近尾声了。 最后我们就需要来看一下项目的打包和发布功能，这两个功能也就是我们本章节的主要功能。 11-2：项目构建过程分析与实现本小节我们主要围绕着三个问题来去讲： 为什么需要打包项目？ 打包之后项目可以通...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%EF%BC%9A%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B9%8B%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">第十一章：项目部署之通用方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-1%EF%BC%9A%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">11-1：开篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-2%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">11-2：项目构建过程分析与实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-3%EF%BC%9A%E5%9F%9F%E5%90%8D%E3%80%81DNS%E3%80%81%E5%85%AC%E7%BD%91IP%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%81Nginx%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">11-3：域名、DNS、公网IP、服务器、Nginx之间的关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-4%EF%BC%9A%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0%E6%8C%87%E5%8D%97\"><span class=\"toc-text\">11-4：阿里云服务器购买指南</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-5%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">11-5：服务器连接方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-6%EF%BC%9ANginx-%E7%8E%AF%E5%A2%83%E5%A4%84%E7%90%86\"><span class=\"toc-text\">11-6：Nginx 环境处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-7%EF%BC%9A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">11-7：项目发布</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-8%EF%BC%9A%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">11-8：总结</span></a></li></ol></li></ol>","author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}},"mapped":true,"prev_post":{"title":"12总结","uid":"4da4bbb2736245860c5430530ccba5c0","slug":"vue3.2后台管理系统/12总结","date":"2022-08-22T22:02:44.000Z","updated":"2022-08-23T02:06:13.913Z","comments":true,"path":"api/articles/vue3.2后台管理系统/12总结.json","keywords":null,"cover":"/img/street-light-1024x699.jpg","text":"第十二章：总结12-1：总结回顾一下整个项目，整个项目我们分成了10个章节： 编程规范 登录处理 Layout 处理 后台综合方案 ElementPlus 组件 权限处理 动态表格处理 编辑器处理 部署方案 通过这10大块内容，把一个后台系统的高频场景都进行了解析。 ","link":"","photos":[],"count_time":{"symbolsCount":136,"symbolsTime":"1 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}},"feature":true},"next_post":{"title":"10富文本与markdown综合处理之创建文章","uid":"b1e9e78ac18c4b9597d3b65fe8a20c6a","slug":"vue3.2后台管理系统/10富文本与markdown综合处理之创建文章","date":"2022-08-22T20:02:44.000Z","updated":"2022-08-23T02:05:31.286Z","comments":true,"path":"api/articles/vue3.2后台管理系统/10富文本与markdown综合处理之创建文章.json","keywords":null,"cover":"/img/SplitShire-21-7016-1024x683.jpg","text":"第十章：富文本与markdown综合处理之创建文章10-1：开篇本章中我们的核心业务就是 编辑文章。 而对于 编辑文章 而言提供了两种编辑方式： 富文本 markdown 对于这两种编辑形式在现在的前端中都拥有非常多的第三方库，那么对于我们开发者而言，我们肯定也是从中去选择出一个...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"vue3.2后台管理系统","slug":"vue3-2后台管理系统","count":12,"path":"api/categories/vue3-2后台管理系统.json"}],"tags":[{"name":"后台","slug":"后台","count":12,"path":"api/tags/后台.json"}],"author":{"name":"西非","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个跑路的设计师","socials":{"github":"https://github.com/xuhui-web","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/a18482157085","juejin":"https://juejin.cn/user/1535369026995422","customs":{}}},"feature":true}}